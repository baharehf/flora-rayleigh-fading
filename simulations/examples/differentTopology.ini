[General]
#record-eventlog = true
#eventlog-file = results/my_sim_eventlog.log

#debug-on-errors = true

network = flora.simulations.LoRaNetworkTest

output-vector-file = results/differentTopology/differentTopology-${runnumber}.vec
output-scalar-file = results/differentTopology/differentTopology-${runnumber}.sca

**.maxTransmissionDuration = 4s
**.energyDetection = -110dBm

eventlog-file = results/differentTopology/differentTopology-${runnumber}.elog
snapshot-file = results/differentTopology/differentTopology-${runnumber}.sna
cmdenv-output-file = results/differentTopology/differentTopology-${runnumber}.out

**.powerConsumption:vector.vector-recording = false
**.residualEnergyCapacity:vector.vector-recording = false
**.loRaNodes[*].**.queueLength:vector.vector-recording = false
**.loRaNodes[*].**.queueBitLength:vector.vector-recording = false
**.loRaNodes[*].**.outgoingPacketLengths:vector.vector-recording = false
**.loRaNodes[*].**.outgoingDataRate:vector.vector-recording = false
**.loRaNodes[*].**.queueingTime:vector.vector-recording = false
**.loRaNodes[*].**.radioMode:vector.vector-recording = false
**.loRaNodes[*].**.incomingDataRate:vector.vector-recording = false
**.loraNodes[*].**.queueingTime:vector.vector-recording = false
**.loRaNodes[*].**.vector-recording = true
#**.Calculated SNRmargin in ADR for Node*.vector-recording = true
**.Calculated SNRmargin in ADR.vector-recording = true
#**.SNRmargin for Node*.vector-recording = true
#**.Vector of SNIR per node.vector-recording = true
**.SNIR_GW for Node*.vector-recording = true
**.Vector of RSSI per node.vector-recording = true
**.Received Sequence number.vector-recording = true
#**.loRaNodes[*].**.SNRmVector.vector-recording = true
**.SNRm for Node*.vector-recording = true
#**.SNRm for Node .vector-recording = true
#**.*.snrMarginVector.vector-recording = true
#**.cOutvector*.vector-recording = true
**.vector-recording = false

rng-class = "cMersenneTwister"
**.loRaGW[*].numUdpApps = 1
**.loRaGW[*].packetForwarder.localPort = 2000
**.loRaGW[*].packetForwarder.destPort = 1000
**.loRaGW[*].packetForwarder.destAddresses = "networkServer"
**.loRaGW[*].packetForwarder.indexNumber = 0

**.networkServer.numApps = 1
**.networkServer.**.adrDeviceMargin = 15
**.networkServer.**.evaluateADRinServer = ${adrstatus = true, false}
**.networkServer.app[0].typename = "NetworkServerApp"
**.networkServer.app[0].destAddresses = "loRaGW[0]"
**.networkServer.app[0].destPort = 2000
**.networkServer.app[0].localPort = 1000

**.networkServer.app[0].adrMethod = ${adrMethod = "avg","max","avg","min","percentile"}

**.numberOfPacketsToSend = 0
sim-time-limit = 30d
warmup-period = 10d
#simtime-resolution = -3
repeat = 1

**.timeToFirstPacket = ${timeToNext=exponential(1000s)}
**.timeToNextPacket = ${timeToNext}
**.alohaChannelModel = false

**.loRaNodes[*].**.initFromDisplayString = false
**.loRaNodes[*].**.evaluateADRinNode = ${adrstatus}
**.loRaNodes[*].**initialLoRaBW = 125 kHz
**.loRaNodes[*].**initialLoRaCR = 4
**.loRaNodes[*].numApps = 1
**.loRaNodes[*].app[0].typename = "SimpleLoRaApp"


**.LoRaGWNic.radio.iAmGateway = true
**.loRaGW[*].**.initFromDisplayString = false


**.loRaNodes[*].LoRaNic.radio.energyConsumer.typename = "LoRaEnergyConsumer"
**.loRaNodes[*].**.energySourceModule = "^.IdealEpEnergyStorage"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("../energyConsumptionParameters.xml")


**.sigma = ${sigma = 0, 1.2, 3.57}
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxZ = 0m

LoRaNetworkTest.**.radio.separateTransmissionParts = false
LoRaNetworkTest.**.radio.separateReceptionParts = false

**.ipv4Delayer.config = xmldoc("../cloudDelays.xml")
**.radio.radioMediumModule = "LoRaMedium"
**.LoRaMedium.pathLoss.typename = ${ChannelModel = "FreeSpacePathLoss","LoRaLogNormalShadowing", "LoRaHataOkumura", "LoRaPathLossOulu"}
#**.LoRaMedium.pathLossType.typename =  "FreeSpacePathLoss" #"LoRaHataOkumura" "LoRaLogNormalShadowing" "LoRaPathLossOulu"
**.minInterferenceTime = 0s
**.displayAddresses = false
**.constraintAreaMaxX = 480.0m
**.constraintAreaMaxY = 480.0m

**.numberOfGateways = ${numberOfGateways = 1,2,3}
**.loRaGW[0].**.initialX = 240m
**.loRaGW[0].**.initialY = 240m
**.loRaGW[1].**.initialX = 250.00m
**.loRaGW[1].**.initialY = 380.00m
**.loRaGW[2].**.initialX = 500.00m
**.loRaGW[2].**.initialY = 200.00m

**.numberOfNodes = ${numberOfNodes= 10, 50, 100, 500}

**.loRaNodes[*].**.NODE_setTP14 = ${NODE_status = true,false}
**.networkServer.**.NS_increaseSF = ${NS_status = true,false}

**.loRaNodes[*].**.initialX = uniform(0m, 480m)
**.loRaNodes[*].**.initialY = uniform(0m, 480m)

**.loRaNodes[*].**initialLoRaSF = ${SF= intuniform(7, 12)}

**.loRaNodes[*].**initialLoRaTPIndex = intuniform(0, 4)
**.loRaNodes[*].**initialLoRaTP =
    initialLoRaTPIndex == 0 ? 2 dBm :
    initialLoRaTPIndex == 1 ? 5 dBm :
    initialLoRaTPIndex == 2 ? 8 dBm :
    initialLoRaTPIndex == 3 ? 11 dBm :
                              14 dBm

#**.loRaNodes[0].**.initialX = 390m  # 240m + 150m
#**.loRaNodes[0].**.initialY = 240m  # 240m

#**.loRaNodes[1].**.initialX = 361.35m
#**.loRaNodes[1].**.initialY = 328.17m

#**.loRaNodes[2].**.initialX = 286.35m
#**.loRaNodes[2].**.initialY = 382.66m

#**.loRaNodes[3].**.initialX = 193.65m
#**.loRaNodes[3].**.initialY = 382.66m

#**.loRaNodes[4].**.initialX = 118.65m
#**.loRaNodes[4].**.initialY = 328.17m

#**.loRaNodes[5].**.initialX = 90m
#**.loRaNodes[5].**.initialY = 240m

#**.loRaNodes[6].**.initialX = 118.65m
#**.loRaNodes[6].**.initialY = 151.83m

#**.loRaNodes[7].**.initialX = 193.65m
#**.loRaNodes[7].**.initialY = 97.34m

#**.loRaNodes[8].**.initialX = 286.35m
#**.loRaNodes[8].**.initialY = 97.34m

#**.loRaNodes[9].**.initialX = 361.35m
#**.loRaNodes[9].**.initialY = 151.83m


#**.loRaNodes[0].**.initialX = ${240m + (150m * cos(0))}
#**.loRaNodes[0].**.initialY = ${240m + (150m * sin(0))}
#
##**.loRaNodes[1].**.initialX = ${240m + (150m * cos(90))}
##**.loRaNodes[1].**.initialY = ${240m + (150m * sin(90))}
#
##**.loRaNodes[2].**.initialX = ${240m + (150m * cos(180))}
##**.loRaNodes[2].**.initialY = ${240m + (150m * sin(180))}
#
##**.loRaNodes[3].**.initialX = ${240m + (150m * cos(270))}
##**.loRaNodes[3].**.initialY = ${240m + (150m * sin(270))}
#
#**.loRaNodes[1].**.initialX = ${240m + (150m * cos(36))}
#**.loRaNodes[1].**.initialY = ${240m + (150m * sin(36))}
#
#**.loRaNodes[2].**.initialX = ${240m + (150m * cos(72))}
#**.loRaNodes[2].**.initialY = ${240m + (150m * sin(72))}
#
#**.loRaNodes[3].**.initialX = ${240m + (150m * cos(108))}
#**.loRaNodes[3].**.initialY = ${240m + (150m * sin(108))}
#
#**.loRaNodes[4].**.initialX = ${240m + (150m * cos(144))}
#**.loRaNodes[4].**.initialY = ${240m + (150m * sin(144))}
#
#**.loRaNodes[5].**.initialX = ${240m + (150m * cos(180))}
#**.loRaNodes[5].**.initialY = ${240m + (150m * sin(180))}
#
#**.loRaNodes[6].**.initialX = ${240m + (150m * cos(216))}
#**.loRaNodes[6].**.initialY = ${240m + (150m * sin(216))}
#
#**.loRaNodes[7].**.initialX = ${240m + (150m * cos(252))}
#**.loRaNodes[7].**.initialY = ${240m + (150m * sin(252))}
#
#**.loRaNodes[8].**.initialX = ${240m + (150m * cos(288))}
#**.loRaNodes[8].**.initialY = ${240m + (150m * sin(288))}
#
#**.loRaNodes[9].**.initialX = ${240m + (150m * cos(324))}
#**.loRaNodes[9].**.initialY = ${240m + (150m * sin(324))}


#**.expId = ${expId=0..20}
#**.loRaNodes[*].**initialLoRaSF =  ${ intuniform(7, 12), intuniform(7, 12), intuniform(7, 12), intuniform(7, 12), intuniform(7, 12), intuniform(7, 12), intuniform(7, 12), intuniform(7, 12), intuniform(7, 12), intuniform(7, 12), intuniform(7, 12), intuniform(7, 12), intuniform(7, 12), intuniform(7, 12), intuniform(7, 12), intuniform(7, 12), intuniform(7, 12), intuniform(7, 12), intuniform(7, 12), intuniform(7, 12) ! expId} 
#**.loRaNodes[*].**initialLoRaTP = 14dBm

#**.loRaNodes[*].**initialLoRaSF = ${SF= 12} #7,8,9,10,11,
#**.loRaNodes[*].**initialLoRaTP = ${TP= 2dBm, 5dBm, 8dBm, 11dBm, 14dBm}
#**.loRaNodes[*].**initialLoRaSF = ${SF= 7,8,9,10,11,12}

#**.loRaNodes[*].**initialLoRaTP = ${TP= 2dBm,5dBm,8dBm,11dBm,14dBm}
#**.loRaNodes[*].**initialLoRaTP = ${TP=intuniform(2dBm,5dBm,8dBm,11dBm,14dBm)}
#**.loRaNodes[*].**initialLoRaTP = ${TP=choose(2dBm,5dBm,8dBm,11dBm,14dBm)}

#**.loRaNodes[*].**initialLoRaTP = ${TP= 2dBm,5dBm,8dBm,11dBm,14dBm}
#**.loRaNodes[*].**initialLoRaTP = (2dBm + 3*uniform(0dBm, 4dBm))
#**.loRaNodes[*].**initialLoRaTP = ${TP= 2dBm,5dBm,8dBm,11dBm,14dBm}

#**.loRaNodes[*].**initialLoRaTP = (2dBm + 3dBm * (intuniform(0,4)))




#**.loRaNodes[*].**initialLoRaTP = ${(2dBm + (3 *intuniform(0, 4))dBm)} #${TP=uniform(2dBm,14dBm)}

#**.loRaNodes[1].**initialLoRaSF = 7
#**.loRaNodes[1].**initialLoRaTP = 11dBm
